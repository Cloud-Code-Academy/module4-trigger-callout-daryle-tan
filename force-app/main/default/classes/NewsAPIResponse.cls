/**
 * Wrapper class for parsing the NewsAPI response
 */
public class NewsAPIResponse {
    // TODO: Define fields to match the NewsAPI response structure
    public String status { get; set; }
    public Integer totalResults { get; set; }
    public List<Article> articles { get; set; }
    
    /**
     * Inner class representing a news article
     */
    public class Article {
        // TODO: Define article fields
        // Example fields:
        public Source source { get; set; }
        public String author { get; set; }
        public String title { get; set; }
        public String description { get; set; }
        public String url { get; set; }
        public String urlToImage { get; set;}
        public String publishedAt { get; set;}
        public String content { get; set; }
    }
    
    /**
     * Inner class representing a news source
     */
    public class Source {
        // TODO: Define source fields
        // Example fields:
        public String id { get; set; }
        public String name { get; set; }
    }
    
    /**
     * Static method to convert an API article to a Salesforce Article__c record
     * @param apiArticle The API article to convert
     * @return Article__c The Salesforce record
     */
    public static Article__c convertToSObject(Article apiArticle) {
        // TODO: Implement conversion from API article to Salesforce record
        // Consider:
        // - Generating a unique record name
        // - Setting article fields from the API response
        // - Handling content length limits if needed
        // - Handling date conversion
        Article__c article = new Article__c();
        article.Source__c = apiArticle.source.name;
        article.Title__c = apiArticle.title;
        article.Description__c = apiArticle.description;
        article.Content__c = apiArticle.content;
        article.Author__c = apiArticle.author;
        article.url__c = apiArticle.url;
        article.urlToImage__c = apiArticle.urlToImage;
        article.Published_At__c = DateTime.valueOfGmt(apiArticle.publishedAt.replace('T', ' ').replace('Z', ''));

        return article;
    }
} 